{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","actions/productActions.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","components/FormContainer.js","screens/LoginScreen.js","actions/cartActions.js","screens/CartScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","filter","x","paymentMethod","item","existItem","find","map","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","authorization","token","axios","get","data","setItem","stringify","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","className","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","listProducts","pageNumber","listProductDetails","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","alert","ListGroup","countInStock","ListGroupItem","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","FormContainer","xs","LoginScreen","location","email","setEmail","password","setPassword","redirect","search","split","login","addToCart","CartScreen","Number","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","pushState","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","succesPay","loadingPay","succesDeliver","loadingDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","Authorization","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5d6de650.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS ='CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD ='CART_SAVE_PAYMENT_METHOD';","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n  } from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n  } from './reducers/userReducers';\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderDeliverReducer,\r\n    orderListMyReducer,\r\n    orderListReducer\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(\r\n  localStorage.getItem('cartItems')\r\n) : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(\r\n  localStorage.getItem('userInfo')\r\n) : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(\r\n  localStorage.getItem('shippingAddress')\r\n) : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import { PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n    }\r\n    from '../constants/productConstants';\r\n\r\n\r\nexport const productListReducer = (state = { products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false,\r\n                    products: action.payload.products,\r\n                    pages: action.payload.pages,\r\n                    page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] }}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants.js';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n } from '../constants/userConstants';\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { \r\n        ORDER_CREATE_REQUEST,\r\n        ORDER_CREATE_SUCCESS,\r\n        ORDER_CREATE_FAIL,\r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS,\r\n        ORDER_DETAILS_FAIL,\r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n        ORDER_PAY_RESET,\r\n        ORDER_LIST_MY_REQUEST,\r\n        ORDER_LIST_MY_SUCCESS,\r\n        ORDER_LIST_MY_FAIL,\r\n        ORDER_LIST_MY_RESET,\r\n        ORDER_LIST_REQUEST,\r\n        ORDER_LIST_SUCCESS,\r\n        ORDER_LIST_FAIL,\r\n        ORDER_DELIVER_REQUEST,\r\n        ORDER_DELIVER_SUCCESS,\r\n        ORDER_DELIVER_FAIL,\r\n        ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state;\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {\r\n    loading: true,\r\n    orderItems: [],\r\n    shippingAddress: {} },\r\n    action\r\n    ) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state;\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state;\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state;\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state;\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n      case ORDER_LIST_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_LIST_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          orders: action.payload,\r\n        }\r\n      case ORDER_LIST_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","import axios from 'axios';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\nimport { USER_DETAILS_FAIL,\r\n        USER_DETAILS_REQUEST,\r\n        USER_DETAILS_SUCCESS,\r\n        USER_DETAILS_RESET,\r\n        USER_LOGIN_FAIL,\r\n        USER_LOGIN_REQUEST,\r\n        USER_LOGIN_SUCCESS,\r\n        USER_LOGOUT,\r\n        USER_REGISTER_FAIL,\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_UPDATE_PROFILE_FAIL,\r\n        USER_UPDATE_PROFILE_REQUEST,\r\n        USER_UPDATE_PROFILE_SUCCESS,\r\n        USER_LIST_REQUEST,\r\n        USER_LIST_SUCCESS,\r\n        USER_LIST_FAIL,\r\n        USER_LIST_RESET,\r\n        USER_DELETE_REQUEST,\r\n        USER_DELETE_SUCCESS,\r\n        USER_DELETE_FAIL,\r\n        USER_UPDATE_REQUEST,\r\n        USER_UPDATE_SUCCESS,\r\n        USER_UPDATE_FAIL\r\n        } from '../constants/userConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        });\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n            )\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LIST_RESET });\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: ORDER_LIST_MY_RESET });\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        });\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/',\r\n            { name, email, password },\r\n            config\r\n            )\r\n\r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n            dispatch({\r\n                type: USER_DETAILS_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n            dispatch({\r\n                type: USER_UPDATE_PROFILE_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config);\r\n\r\n            dispatch({\r\n                type: USER_LIST_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config);\r\n\r\n            dispatch({ type: USER_DELETE_SUCCESS });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n            dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n                placeholder='Search Products...'>\r\n            </Form.Control>\r\n        <Button type='submit' variant='outline-success' className='p-2'>\r\n            Search\r\n        </Button>\r\n        </Form>\r\n     );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\nimport SearchBox from './SearchBox';\r\n\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                    <LinkContainer to='/cart'>\r\n                        <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                    {userInfo ? (\r\n                        <NavDropdown title={userInfo.name} id='username'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    ): <LinkContainer to='/login'>\r\n                    <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n                </LinkContainer>}\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                            <LinkContainer to='/admin/userlist'>\r\n                                <NavDropdown.Item>Users</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/productlist'>\r\n                                <NavDropdown.Item>Products</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/orderlist'>\r\n                                <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                        </NavDropdown>\r\n                        )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n     );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyrigth &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n     );\r\n}\r\nexport default Footer;","import axios from 'axios';\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants';\r\n\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST});\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST});\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n            dispatch({\r\n                type: PRODUCT_DELETE_SUCCESS\r\n            });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n            dispatch({\r\n                type: PRODUCT_CREATE_SUCCESS,\r\n                payload: data\r\n            });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config);\r\n\r\n            dispatch({\r\n                type: PRODUCT_UPDATE_SUCCESS,\r\n                payload: data\r\n            });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n            dispatch({\r\n                type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST});\r\n\r\n        const { data } = await axios.get(`/api/products/top`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={value >= 1\r\n                ? 'fas fa-star'\r\n                : value >= 0.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n            ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2\r\n                ? 'fas fa-star'\r\n                : value >= 1.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n            ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3\r\n                ? 'fas fa-star'\r\n                : value >= 2.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n            ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4\r\n                ? 'fas fa-star'\r\n                : value >= 3.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n            ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5\r\n                ? 'fas fa-star'\r\n                : value >= 4.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n            ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n     );\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default Rating;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n    return ( \r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                    <Rating\r\n                     value={product.rating}\r\n                     text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as='h3'>\r\n                ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n     );\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n                }}>\r\n        <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n     );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated);\r\n    const { loading, error, products } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({title, description, keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n        </Helmet>\r\n     );\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to Proshop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics, buy electronics, cheap electronics'\r\n}\r\n\r\nexport default Meta;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;\r\n\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n    <>\r\n        <Meta />\r\n        {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n        <h1>Latest Products</h1>\r\n            {loading ?\r\n                <Loader /> :\r\n                error ?\r\n                <Message variant='danger'>{error}</Message> :\r\n                    <>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate\r\n                        page={page}\r\n                        pages={pages}\r\n                        keyword={keyword ? keyword : ''}\r\n                        />\r\n                    </>\r\n        }\r\n\r\n    </>\r\n     );\r\n}\r\n\r\nexport default HomeScreen;","import React, { useState ,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Meta from '../components/Meta';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\nconst ProductScreen = ( {history, match} ) => {\r\n    const [ qty, setQty ] = useState(1);\r\n    const [ rating, setRating ] = useState(0);\r\n    const [ comment, setComment ] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate);\r\n    const { loading: loadingProductReview, error: errorProductReview, success: successProductReview } = productReviewCreate;\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }));\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link className='btn btn-light my-3' to='/'>\r\n            Go Back\r\n        </Link>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'></Message> : (\r\n            <>\r\n            <Meta title={product.name} />\r\n            <Row>\r\n            <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>{product.name}</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Rating\r\n                            value={product.rating}\r\n                            text={`${product.numReviews}\r\n                            reviews`}\r\n                            />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Price: ${product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Description: {product.description}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Price:\r\n                                </Col>\r\n                                <Col>\r\n                                    <strong>${product.price}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    Status:\r\n                                </Col>\r\n                                <Col>\r\n                                    {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {product.countInStock > 0 && (\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                    <Form.Control as='select'\r\n                                    value={qty}\r\n                                    onChange={(e) => setQty(e.target.value)}>\r\n                                        {\r\n                                        [...Array(product.countInStock).keys()].map(x => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                                </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroupItem>\r\n                        )}\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                onClick={addToCartHandler}\r\n                                className='btn-block'\r\n                                type='button'\r\n                                disabled={product.countInStock === 0}\r\n                                >\r\n                                Add To Cart\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                <ListGroup variant='flush'>\r\n                    {product.reviews.map(review => (\r\n                        <ListGroupItem key={review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value={review.rating} />\r\n                            <p>{review.createdAt.substring(0,10)}</p>\r\n                            <p>{review.comment}</p>\r\n                        </ListGroupItem>\r\n                    ))}\r\n                    <ListGroupItem>\r\n                        <h2>Write a Customer Review</h2>\r\n                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                        {userInfo ? (<Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                        </Form>)\r\n                        : <Message>Please <Link to='/login'>Login to write a review</Link></Message>}\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n        )}\r\n    </>\r\n     );\r\n}\r\n\r\nexport default ProductScreen;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default FormContainer;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId={'email'} >\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n                </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                    New customer? <Link to={redirect ? `/register?redirect=${redirect}`\r\n                    : '/register'}>Register</Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n     );\r\n}\r\n\r\nexport default LoginScreen","import axios from 'axios';\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n}","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport Message from '../components/Message';\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id;\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n    console.log(qty);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    console.log(cartItems);\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping');\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go back</Link></Message>: (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control as='select'\r\n                                    value={item.qty}\r\n                                    onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                        {\r\n                                        [...Array(item.countInStock).keys()].map(x => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                                </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash' />\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                Proceed to Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n     );\r\n}\r\n\r\nexport default CartScreen;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId={'name'} >\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'email'} >\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n                </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                    Have an account? <Link to={redirect ? `/login?redirect=${redirect}`\r\n                    : '/login'}>Login</Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n     );\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy);\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }   else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET});\r\n                dispatch(getUserDetails('profile'));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return <Row>\r\n    <Col md={3}>\r\n      <h2>User Profile</h2>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {success && <Message variant='success'>Profile Updated</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Update\r\n        </Button>\r\n      </Form>\r\n    </Col>\r\n    <Col md={9}>\r\n      <h2>My Orders</h2>\r\n      {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                  <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                )}</td>\r\n                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                  <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                )}</td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button className='btn-sm' variant='light'>Details</Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Col>\r\n  </Row>\r\n}\r\n\r\nexport default ProfileScreen","import {\r\n        ORDER_CREATE_REQUEST,\r\n        ORDER_CREATE_SUCCESS,\r\n        ORDER_CREATE_FAIL,\r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS,\r\n        ORDER_DETAILS_FAIL,\r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n        ORDER_LIST_MY_REQUEST,\r\n        ORDER_LIST_MY_SUCCESS,\r\n        ORDER_LIST_MY_FAIL,\r\n        ORDER_LIST_REQUEST,\r\n        ORDER_LIST_SUCCESS,\r\n        ORDER_LIST_FAIL,\r\n        ORDER_DELIVER_REQUEST,\r\n        ORDER_DELIVER_SUCCESS,\r\n        ORDER_DELIVER_FAIL\r\n    } from '../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n            dispatch({\r\n                type: ORDER_CREATE_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n            dispatch({\r\n                type: ORDER_DETAILS_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\r\n\r\n            dispatch({\r\n                type: ORDER_PAY_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\r\n\r\n            dispatch({\r\n                type: ORDER_DELIVER_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n            dispatch({\r\n                type: ORDER_LIST_MY_SUCCESS,\r\n                payload: data\r\n            });\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.get(`/api/orders`, config)\r\n\r\n      dispatch({\r\n        type: ORDER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n        history.push('/payment');\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId={'address'} >\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'city'} >\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'postalCode'} >\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'country'} >\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n     );\r\n}\r\n\r\nexport default ShippingScreen;","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    if (!shippingAddress) {\r\n        history.pushState('/shipping');\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <FormContainer>\r\n    <CheckoutSteps step1 step2 step3 />\r\n    <h1>Payment Method</h1>\r\n    <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n            <Form.Label as=\"legend\">Select Method</Form.Label>\r\n        <Col>\r\n            <Form.Check \r\n            type='radio' \r\n            label='PayPal of Credit Card'\r\n            id='PayPal' \r\n            name='paymentMethod'\r\n            value='PayPal' \r\n            onChange={(e) => setPaymentMethod(e.target.value)}\r\n            checked\r\n            ></Form.Check>\r\n        </Col>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n            Continue\r\n        </Button>\r\n\r\n    </Form>\r\n</FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n      }\r\n\r\n    // Calculate Prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10);\r\n\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice));\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n    const { order, success, error } = orderCreate;\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <CheckoutSteps step1 step2 step3 step4 />\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Address: </strong>\r\n                            {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                            {cart.shippingAddress.postalCode}, {' '} {cart.shippingAddress.country}\r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <strong>Method: </strong>\r\n                        {cart.paymentMethod}\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                            <ListGroup variant='flush'>\r\n                                {cart.cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cart.cartItems.length === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default PlaceOrderScreen;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const { success: succesPay, loading: loadingPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { success: succesDeliver, loading: loadingDeliver } = orderDeliver;\r\n\r\n    if (!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n          }\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        }\r\n\r\n        const addPaypalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || order._id !== orderId || succesPay || succesDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n            dispatch(getOrderDetails(orderId));\r\n        }   else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [dispatch, orderId, order, succesPay, succesDeliver, history, userInfo]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n    <>\r\n    <h1>Order {order._id}</h1>\r\n    <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Name: </strong>{order.user.name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong>\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                        </p>\r\n                        <p>\r\n                            <strong>Address: </strong>\r\n                            {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                            {order.shippingAddress.postalCode}, {' '} {order.shippingAddress.country}\r\n                        </p>\r\n                        {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                        </p>\r\n                        {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                            <ListGroup variant='flush'>\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {!order.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loader />}\r\n                                {!sdkReady ? <Loader /> : (\r\n                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                )\r\n                                }\r\n                                </ListGroup.Item>\r\n                        )}\r\n                        {loadingDeliver && <Loader />}\r\n                        { userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                    Mark As Delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen;","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Button, Table} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector(state => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const { success: successDelete } = userDelete;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        }   else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Users</h1>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>EMAIL</th>\r\n                        <th>ADMIN</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map(user => (\r\n                        <tr key={user._id}>\r\n                            <td>{user._id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                            <td>\r\n                                {user.isAdmin ? (\r\n                                <i className='fas fa-check' style={{color: 'green'}}></i>\r\n                                ) : (\r\n                                <i className='fas fa-times' style={{color: 'red'}}></i>)}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                                <Button variant='danger' className='btn-sm' onClick={() => {\r\n                                    deleteHandler(user._id);\r\n                                }}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )}\r\n        </>\r\n     );\r\n}\r\n\r\nexport default UserListScreen;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate\r\n    } = userUpdate;\r\n\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({type: USER_UPDATE_RESET});\r\n            history.push('/admin/userlist');\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [user, dispatch, userId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n            Go back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId={'name'} >\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'email'} >\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isAdmin'>\r\n                    <Form.Check\r\n                        type='checkbox'\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    ></Form.Check>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            )}\r\n        </FormContainer>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default UserEditScreen;","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Button, Table, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport {\r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct\r\n        } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete\r\n        } = productDelete;\r\n\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct\r\n        } = productCreate;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login');\r\n        }\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber));\r\n        }\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        successCreate,\r\n        createdProduct,\r\n        pageNumber\r\n        ]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>\r\n                                    ${product.price}\r\n                                </td>\r\n                                <td>\r\n                                    {product.category}\r\n                                </td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => {\r\n                                        deleteHandler(product._id);\r\n                                    }}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true} />\r\n            </>\r\n            )}\r\n        </>\r\n     );\r\n}\r\n\r\nexport default ProductListScreen;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ( { match, history } ) => {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate);\r\n    const\r\n        {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate\r\n        } = productUpdate;\r\n\r\n\r\n    useEffect(() => {\r\n            if (successUpdate) {\r\n                dispatch({ type: PRODUCT_UPDATE_RESET });\r\n                history.push('/admin/productlist')\r\n            }   else {\r\n                    if (!product.name || product._id !== productId) {\r\n                        dispatch(listProductDetails(productId));\r\n                    } else {\r\n                        setName(product.name);\r\n                        setPrice(product.price);\r\n                        setImage(product.image);\r\n                        setBrand(product.brand);\r\n                        setCategory(product.category);\r\n                        setCountInStock(product.countInStock);\r\n                        setDescription(product.description);\r\n                }\r\n            }\r\n\r\n\r\n    }, [product, dispatch, productId, history, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data);\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n            Go back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId={'name'} >\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'price'} >\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control\r\n                        type='number'\r\n                        placeholder='Enter price'\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'image'} >\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter image url'\r\n                        value={image}\r\n                        onChange={(e) => setImage(e.target.value)}\r\n                     ></Form.Control>\r\n                     <Form.File\r\n                        id='img-file'\r\n                        label='Choose file'\r\n                        custom\r\n                        onChange={uploadFileHandler}\r\n                     ></Form.File>\r\n                     {uploading && <Loader />}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'brand'} >\r\n                    <Form.Label>Brand</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter brand'\r\n                        value={brand}\r\n                        onChange={(e) => setBrand(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'countInStock'} >\r\n                    <Form.Label>Count In Stock</Form.Label>\r\n                    <Form.Control\r\n                        type='number'\r\n                        placeholder='Enter countInStock'\r\n                        value={countInStock}\r\n                        onChange={(e) => setCountInStock(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'category'} >\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter category'\r\n                        value={category}\r\n                        onChange={(e) => setCategory(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId={'description'} >\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter description'\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                     ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n\r\n                <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            )}\r\n        </FormContainer>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default ProductEditScreen;","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Button, Table} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector(state => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders());\r\n        }   else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h1>Orders</h1>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>USER</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID</th>\r\n                        <th>DELIVERED</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders.map(order => (\r\n                        <tr key={order._id}>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.user && order.user.name}</td>\r\n                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                            <td>${order.totalPrice}</td>\r\n                            <td>\r\n                                {order.isPaid ? (\r\n                                order.paidAt.substring(0, 10)\r\n                                ) : (\r\n                                <i className='fas fa-times' style={{color: 'red'}}></i>)}\r\n                            </td>\r\n                            <td>\r\n                                {order.isDelivered ? (\r\n                                order.deliveredAt.substring(0, 10)\r\n                                ) : (\r\n                                <i className='fas fa-times' style={{color: 'red'}}></i>)}\r\n                            </td>\r\n\r\n                            <td>\r\n                                <LinkContainer to={`/order/${order._id}`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        Details\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )}\r\n        </>\r\n     );\r\n}\r\n\r\nexport default OrderListScreen;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { BrowserRouter  as Router, Route } from 'react-router-dom';\r\n\r\nimport Header from   './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n    <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\r\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} />\r\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store  from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}